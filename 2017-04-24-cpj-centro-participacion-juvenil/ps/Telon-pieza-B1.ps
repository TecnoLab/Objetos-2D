%!PS-Adobe-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Tue Apr 25 11:57:42 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 457x305mm 1296 864 0 () ()
%%BoundingBox: 4 16 1195 861
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 457x305mm
%%PageBoundingBox: 4 16 1195 861
1296 864 cairo_set_page_size
%%EndPageSetup
q 4 16 1191 845 rectclip q
1 0 0 rg
3.2 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 863.999939 cm
518.699 5.406 m 491 68.402 480.273 131.23 493.312 152.324 c 499.074 161.648
 506.383 298.047 505.41 378.16 c 505.254 391.266 512.219 427.945 520.895
 459.664 c 529.566 491.387 536.738 532.492 536.832 551.008 c 537.035 591.848
 602.188 770.02 642.086 838.852 c 642.75 839.992 644.031 842.449 645.094
 844.434 c 849.5 844.434 l 848.625 836.312 847.73 827.762 846.688 817.66
 c 842.32 775.422 832.93 723.73 825.82 702.789 c 814.879 670.562 814.281
 656.309 821.93 610 c 835.059 530.5 870.438 469.504 903.422 469.504 c 911.398
 469.504 917.926 466.773 917.926 463.434 c 917.926 454.812 980.992 428.559
 989.332 433.711 c 993.141 436.066 998.387 434.543 1000.992 430.328 c 1002.875
 427.281 1015.051 425.688 1032.512 425.828 c 1040.449 425.887 1049.477 426.309
 1059.129 427.113 c 1126.141 432.695 1155.363 435.012 1178.055 436.535 c
 1183.934 436.93 1188.988 439.078 1192.219 442.109 c 1192.891 5.406 l h
5.668 6.543 m 5.668 844.434 l 299.953 844.434 l 293.27 808.305 287.406 
721.91 284.406 612.477 c 277.457 359.344 278.906 296.82 292.793 250.055 
c 299.309 228.105 302.867 200.859 300.695 189.504 c 298.527 178.152 300.973
 156.07 306.133 140.434 c 313.91 116.879 313.168 104.941 301.828 70.789 
c 295.125 50.617 288.781 32.137 287.941 5.758 c h
5.668 6.543 m S Q
Q Q
showpage
%%Trailer
%%EOF
