%!PS-Adobe-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Tue Apr 25 17:13:07 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 457x305mm 1296 864 0 () ()
%%BoundingBox: 18 147 221 848
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 457x305mm
%%PageBoundingBox: 18 147 221 848
1296 864 cairo_set_page_size
%%EndPageSetup
q 18 147 203 701 rectclip q
1 0 0 rg
3.2 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 863.999939 cm
158.305 21.16 m 162.023 30.316 l 162.023 30.316 184.371 86.551 184.371 
130.105 c 184.371 160.516 180.918 187.531 176.699 190.137 c 172.156 192.945
 170.961 219.941 173.77 256.332 c 178.07 312.137 176.586 321.586 157.609
 359.027 c 134.133 405.359 130.809 432.566 148.629 432.566 c 162.922 432.566
 164.863 448.336 150.613 448.715 c 145.152 448.859 149.234 456.098 159.68
 464.801 c 181.461 482.938 175.574 496.414 152.238 481.84 c 134.309 470.645
 132.816 474.199 146.344 495.855 c 159.465 516.867 147.551 526.5 132.012
 507.445 c 120.109 492.848 119.75 492.832 124.289 507.043 c 126.902 515.242
 125.145 526.652 120.375 532.398 c 113.809 540.309 116.664 547.16 132.152
 560.625 c 147.562 574.02 152.602 586.008 152.602 609.262 c 152.602 626.238
 156.301 647.039 160.82 655.492 c 167.293 667.578 166.445 670.852 156.852
 670.852 c 142.246 670.852 142.074 672.379 153.762 698.031 c 163.164 718.668
 176.43 718.574 176.43 697.871 c 176.43 691.406 188.938 667.535 204.227 
644.832 c 210 636.262 214.656 628.91 218.617 622.359 c 218.617 600.422 l
 202.133 612.406 199.824 594.117 216.461 572.965 c 217.172 572.059 217.898
 570.984 218.617 569.938 c 218.617 501.305 l 211.418 508.574 207.609 520.035
 204.441 541.156 c 201.277 562.25 195.344 585.766 191.25 593.41 c 183.32
 608.23 160.543 612.652 160.543 599.367 c 160.543 594.996 164.117 591.426
 168.484 591.426 c 172.961 591.426 176.43 569.07 176.43 540.246 c 176.43
 496.363 178.945 487.305 194.082 476.699 c 199.906 472.621 209.172 469.168
 218.617 466.922 c 218.617 21.16 l h
158.305 21.16 m S Q
q 1 0 0 -1 0 863.999939 cm
57.84 19.441 m 56.906 41.992 59.16 67.824 62.602 76.516 c 67.977 90.078
 66.477 89.66 52.344 73.648 c 43.242 63.336 35.793 48.145 35.793 39.891 
c 35.793 31.641 32.219 24.887 27.852 24.887 c 16.168 24.887 18.707 65.488
 31.824 88.43 c 46.703 114.461 46.703 128.785 31.824 123.074 c 24.074 120.102
 19.91 123.285 19.91 132.18 c 19.91 147.254 75.664 202.383 82.898 194.465
 c 85.387 191.742 83.465 188.09 78.629 186.348 c 72.859 184.27 75.441 171.859
 86.145 150.223 c 97.211 127.855 99.523 116.293 93.348 114.234 c 87.035 
112.129 86.531 105.195 91.699 91.598 c 95.801 80.816 98.309 69.438 97.277
 66.312 c 95.828 61.926 124.918 17.953 124.918 17.953 c h
57.84 19.441 m S Q
q 1 0 0 -1 0 863.999939 cm
62.094 232.148 m 60.91 232.23 61.68 235.309 64.105 241.676 c 67.09 249.508
 71.527 253.914 73.973 251.473 c 76.422 249.023 73.973 242.617 68.551 237.227
 c 65.117 233.82 63.016 232.082 62.094 232.148 c h
62.094 232.148 m S Q
q 1 0 0 -1 0 863.999939 cm
67.375 296.574 m 66.809 296.602 66.211 296.719 65.582 296.93 c 46.918 303.141
 48.453 350.547 67.316 350.547 c 71.82 350.547 75.508 337.738 75.508 322.086
 c 75.508 304.648 72.867 296.32 67.375 296.574 c h
67.375 296.574 m S Q
Q Q
showpage
%%Trailer
%%EOF
