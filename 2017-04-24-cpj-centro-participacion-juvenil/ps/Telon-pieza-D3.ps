%!PS-Adobe-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Tue Apr 25 15:14:01 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 457x305mm 1296 864 0 () ()
%%BoundingBox: 9 12 1204 857
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 457x305mm
%%PageBoundingBox: 9 12 1204 857
1296 864 cairo_set_page_size
%%EndPageSetup
q 9 12 1195 845 rectclip q
1 0 0 rg
3.2 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 863.999939 cm
13.93 846.809 m 395.461 847.367 l 396.793 843.375 408.711 839.238 410.012
 836.633 c 416.941 822.746 416.938 814.68 409.973 803.535 c 402.305 791.258
 404.82 783.719 425.043 758.355 c 458.234 716.727 474.645 682.727 495.332
 612.738 c 505.016 579.973 516.625 548.637 521.133 543.105 c 525.957 537.184
 527.297 515.816 524.395 491.09 c 520.676 459.473 522.566 444.695 532.066
 431.133 c 544.121 413.926 543.207 411.395 511.246 373.492 c 459.746 312.418
 424.66 248.898 419.047 206.578 c 414 168.523 l 381.227 191.02 l 363.199
 203.395 315.379 230.109 274.957 250.387 c 211.848 282.047 197.031 286.547
 170.09 282.238 c 152.836 279.48 125.539 279.695 109.43 282.719 c 80.141
 288.215 l 84.574 369.059 l 87.332 419.336 96.258 474.5 108.184 514.949 
c 127.355 579.992 l 81.973 600.359 l 64.922 608.012 33.098 614.652 10.664
 619.668 c h
78.059 8.922 m 77.605 11.004 77.148 13.086 76.887 14.715 c 72.855 39.621
 73.293 40.059 95.898 33.574 c 108.625 29.926 130.219 21.156 143.883 14.09
 c 147.047 12.453 150.078 10.688 153.055 8.922 c h
1200.48 526.688 m 1182.797 518.363 1168.66 519.898 1165.609 520.082 c 1165.352
 520.098 1165.172 520.152 1165.074 520.25 c 1161.523 523.801 1178.07 562.469
 1200.48 605.664 c h
1201.176 795.215 m 1193.957 797.312 1186.305 798.48 1180.477 800.562 c 
1149.055 811.789 1146.047 849.25 1146.047 849.25 c 1201.457 848.762 l h
1201.176 795.215 m S Q
Q Q
showpage
%%Trailer
%%EOF
