%!PS-Adobe-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Tue Apr 25 15:05:35 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 457x305mm 1296 864 0 () ()
%%BoundingBox: 5 15 1196 859
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 457x305mm
%%PageBoundingBox: 5 15 1196 859
1296 864 cairo_set_page_size
%%EndPageSetup
q 5 15 1191 844 rectclip q
1 0 0 rg
3.2 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 863.999939 cm
1140.855 7.363 m 1142.25 25.234 1148.699 56.141 1156.5 81.039 c 1177.242
 147.211 1189.219 221.711 1194.105 318.32 c 1194.105 7.363 l h
7.059 325.199 m 17.496 347.949 27.52 359.785 33.656 366.848 c 39.539 373.621
 62.562 470.949 116.008 568.805 c 121.527 578.914 127.602 600.457 129.035
 605.68 c 7.059 606.074 l 7.16 846.043 l 1194.105 845.254 l 1193.27 611.977
 l 821.68 606.957 l 820.625 575.391 819.75 552.688 819.172 546.438 c 816.344
 515.859 810.102 476.543 805.305 459.066 c 796.586 427.293 l 786.137 451.125
 l 780.391 464.23 775.371 498.184 774.984 526.582 c 774.398 569.492 766.363
 597.625 763.258 606.957 c 385.613 606.957 l 384.727 595.926 365.711 357.758
 367.73 257.312 c 369.473 170.652 378.203 51.375 392.59 6.969 c 7.555 7.363
 l h
7.059 325.199 m S Q
Q Q
showpage
%%Trailer
%%EOF
