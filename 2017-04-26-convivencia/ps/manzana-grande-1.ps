%!PS-Adobe-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Tue Apr 11 11:25:38 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 457x308mm 1296 874 0 () ()
%%BoundingBox: 44 130 965 809
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 457x308mm
%%PageBoundingBox: 44 130 965 809
1296 875 cairo_set_page_size
%%EndPageSetup
q 44 130 921 679 rectclip q
1 0 0 rg
0.8 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 874.204712 cm
48.152 150.434 m 40.102 214.621 48.195 277.812 64.367 339.758 c 75.027 
380.598 87.301 421.41 103.379 460.367 c 131.078 527.508 167.18 590.246 217.246
 643.73 c 254.238 683.234 296.492 715.504 348.879 732.23 c 392.273 746.078
 436.543 747.746 479.188 732.008 c 504.047 722.832 526.008 720.672 550.699
 730.902 c 564.918 736.793 581.332 737.398 596.762 740.379 c 610.996 740.098
 625.238 739.82 639.477 739.543 c 649.582 737.023 659.703 734.582 669.781
 731.977 c 716.59 719.867 755.129 693.934 789.191 660.504 c 844.297 606.402
 880.465 540.457 908.879 469.59 c 932.109 411.637 947.633 351.645 956.531
 289.945 c 963.535 241.406 966.418 192.59 960.41 143.75 c 957.188 117.555
 951.992 91.941 943.996 67.312 c 68.359 67.312 l 58.375 93.473 51.805 121.262
 48.152 150.434 c h
48.152 150.434 m S Q
Q Q
showpage
%%Trailer
%%EOF
