%!PS-Adobe-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Tue Apr 11 11:26:51 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 457x308mm 1296 874 0 () ()
%%BoundingBox: 42 369 920 845
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 457x308mm
%%PageBoundingBox: 42 369 920 845
1296 875 cairo_set_page_size
%%EndPageSetup
q 42 369 878 476 rectclip q
1 0 0 rg
0.8 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 874.204712 cm
445.336 95.109 m 413.652 62.234 374.391 44.465 330.293 35.93 c 321.25 34.18
 312.184 32.625 303.117 30.98 c 291.355 31.211 279.594 31.441 267.824 31.672
 c 251.5 38.492 245.094 50.723 245.895 68.309 c 247.461 102.707 254.617 
135.707 269.133 166.875 c 284.039 198.879 305.832 225.445 335.504 244.926
 c 376.922 272.129 422.734 283.57 471.859 282.434 c 463.977 302.262 456.184
 322.129 448.262 341.953 c 447.141 344.77 445.793 347.496 444.34 350.723
 c 434.57 347.199 425.383 343.836 416.152 340.578 c 374.805 325.992 332.23
 319.574 288.457 322.34 c 221.91 326.547 163.672 350.453 114.961 396.594
 c 81.875 427.938 58.66 464.051 43.422 503.977 c 919.059 503.977 l 910.48
 477.559 898.676 452.277 882.578 428.633 c 830.789 352.582 758.184 314.16
 666.27 313.098 c 612.227 312.469 560.93 325.422 511.754 347.371 c 508.965
 348.617 506.066 349.613 500.656 351.723 c 506.711 341.219 511.301 332.414
 516.652 324.105 c 546.5 277.824 577 231.91 616.871 193.434 c 637.742 173.293
 660.297 154.898 682.082 135.707 c 685.789 132.438 689.73 129.367 693.066
 125.742 c 700.469 117.684 699.398 109.184 689.418 104.598 c 661.363 91.707
 633.16 79.09 604.668 67.211 c 591.363 61.664 576.77 67.594 569.344 79.883
 c 543.566 122.539 520.953 166.805 500.883 212.324 c 500.488 209.809 500.07
 207.301 499.57 204.816 c 491.324 163.562 475.094 125.992 445.336 95.109
 c h
445.336 95.109 m S Q
Q Q
showpage
%%Trailer
%%EOF
