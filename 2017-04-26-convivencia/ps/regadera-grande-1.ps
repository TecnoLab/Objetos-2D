%!PS-Adobe-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Mon Apr 10 16:37:25 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 457x308mm 1296 874 0 () ()
%%BoundingBox: 43 141 1271 815
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 457x308mm
%%PageBoundingBox: 43 141 1271 815
1296 875 cairo_set_page_size
%%EndPageSetup
q 43 141 1228 674 rectclip q
1 0 0 rg
0.8 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 874.204712 cm
201.094 658.074 m 201.758 655.152 202.73 652.293 204.293 646.852 c 215.375
 667.723 225.547 686.402 235.293 705.305 c 239.852 714.152 244.398 723.004
 248.949 731.855 c 850.438 731.855 l 824.953 669.199 799.211 606.645 773.555
 544.051 c 751.207 489.52 728.867 434.98 706.539 380.438 c 705.816 378.676
 705.305 376.828 706.539 373.191 c 835.492 450.277 964.445 527.363 1094.957
 605.383 c 1091.863 610.496 1088.914 615.551 1085.781 620.5 c 1077.406 633.75
 1071.566 647.48 1076.297 663.629 c 1082.344 684.305 1097.957 694.746 1117.418
 698.316 c 1136.066 701.734 1151.402 693.223 1161.383 677.199 c 1194.828
 623.512 1228.297 569.844 1260.684 515.523 c 1266.551 505.68 1267.348 492.812
 1270.484 481.34 c 1267.641 475.188 1264.793 469.035 1261.945 462.879 c 
1257.137 459.23 1252.418 455.449 1247.488 451.961 c 1224.473 435.684 1198.043
 440.633 1182.426 464.621 c 1170.809 482.473 1159.926 500.805 1148.676 518.898
 c 1147.461 520.859 1146.035 522.684 1144.242 525.227 c 1115.711 508.258
 1087.539 491.57 1059.434 474.773 c 1006.027 442.848 952.656 410.836 899.254
 378.891 c 844.688 346.25 790.09 313.672 735.535 281.016 c 706.805 263.824
 678.047 246.676 649.527 229.141 c 645.828 226.875 642.375 222.887 640.688
 218.898 c 624.336 180.195 608.031 141.477 592.426 102.469 c 578.391 67.402
 541.898 51.715 507.594 67.539 c 365.422 133.113 223.324 198.84 81.277 264.691
 c 48.363 279.941 34.711 315.492 50.844 348.098 c 75.023 396.969 100.918
 444.988 125.98 493.422 c 137.344 515.395 148.656 537.395 159.465 559.633
 c 161.145 563.094 160.93 568.121 160.055 572.082 c 149.48 619.934 136.609
 667.371 128.324 715.605 c 127.395 721.02 126.547 726.438 125.738 731.855
 c 187.262 731.855 l 190.91 707.145 195.566 682.559 201.098 658.074 c h
201.094 658.074 m S Q
Q Q
showpage
%%Trailer
%%EOF
