%!PS-Adobe-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Tue May 23 15:39:43 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 457x305mm 1296 864 0 () ()
%%BoundingBox: 11 258 285 856
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 457x305mm
%%PageBoundingBox: 11 258 285 856
1296 864 cairo_set_page_size
%%EndPageSetup
q 11 258 274 598 rectclip q
1 0 0 rg
0.8 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 863.999939 cm
283.641 157.605 m 281.328 136.695 271.156 127.406 261.645 125.242 c 260.488
 116.148 256.25 108.125 247.398 103.125 c 242.965 100.617 238.594 98.961
 234.332 98.168 c 234.457 91.629 233.512 84.625 230.336 78.504 c 226.727
 71.539 220.801 66.688 213.199 64.473 c 209.488 63.391 205.934 62.805 202.621
 62.738 c 201.48 56.918 199.34 51.164 195.613 46.344 c 190.691 39.977 183.727
 36.098 175.469 35.121 c 168.367 34.277 161.926 35.051 156.73 36.871 c 154.762
 31.562 151.883 26.273 147.688 21.703 c 140.102 13.438 129.57 9.066 117.238
 9.066 c 116.098 9.066 114.93 9.105 113.723 9.18 c 67.832 12.062 63.996 
54.371 62.547 70.297 c 61.855 77.918 62.535 85.508 63.191 92.852 c 64.008
 101.973 64.781 110.594 62.543 116.066 c 61.375 118.914 59.625 122.707 57.598
 127.094 c 50.172 143.168 38.953 167.453 36.02 190.312 c 34.203 204.461 
39.148 224.348 45.406 249.523 c 52.633 278.602 60.82 311.551 58.41 337.523
 c 56.227 361.066 47.469 381.93 38.199 404.016 c 29 425.941 19.48 448.617
 16.215 474.906 c 9.629 527.973 11.031 548.777 22.762 571.68 c 35.145 595.883
 65.492 601.637 70.719 602.461 c 72.984 602.957 80.168 604.344 89.68 604.344
 c 123.281 604.344 147.766 587.996 158.633 558.312 c 165.891 538.477 169.59
 521.629 173.176 505.332 c 178.73 480.055 184.473 453.918 204.063 413.035
 c 211.469 397.578 217.582 385.191 222.977 374.262 c 241.422 336.883 249.84
 319.824 262.148 275.875 c 273.457 235.508 286.363 182.219 283.641 157.605
 c h
283.641 157.605 m S Q
Q Q
showpage
%%Trailer
%%EOF
