%!PS-Adobe-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Mon May 22 16:59:06 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 457x305mm 1296 864 0 () ()
%%BoundingBox: 28 249 342 841
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 457x305mm
%%PageBoundingBox: 28 249 342 841
1296 864 cairo_set_page_size
%%EndPageSetup
q 28 249 314 592 rectclip q
1 0 0 rg
0.8 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 863.999939 cm
330.633 475.301 m 343.172 527.281 344.129 548.105 335.07 572.191 c 325.508
 597.613 296.047 606.773 290.91 608.199 c 287.906 609.23 276.379 612.824
 261.75 612.824 c 233.445 612.824 211.004 599.133 198.559 574.273 c 189.105
 555.387 183.523 539.066 178.121 523.281 c 169.742 498.793 161.078 473.473
 136.992 435.062 c 127.887 420.547 120.418 408.934 113.824 398.688 c 91.273
 363.633 80.98 347.633 63.773 305.352 c 47.977 266.52 29.129 215.027 29.051
 190.266 c 28.996 174.152 34.234 165.512 38.629 161.102 c 41.164 158.562
 44.102 156.699 47.25 155.609 c 47.371 146.445 50.676 138 58.902 132.035
 c 63.035 129.039 67.184 126.898 71.32 125.629 c 70.457 119.148 70.602 112.086
 73.066 105.645 c 75.863 98.324 81.207 92.832 88.508 89.77 c 92.07 88.277
 95.523 87.301 98.82 86.855 c 99.297 80.945 100.773 74.98 103.93 69.766 
c 108.102 62.887 114.582 58.242 122.68 56.34 c 129.461 54.742 136.035 54.727
 141.484 55.992 c 142.93 50.117 145.41 44.152 149.504 38.887 c 154.559 32.379
 164.141 24.445 181.094 23.59 c 227.109 21.238 235.652 63.074 238.852 78.531
 c 240.398 86.023 240.578 93.641 240.758 101.004 c 240.977 110.164 241.188
 118.816 244.027 124.008 c 245.504 126.703 247.676 130.27 250.184 134.402
 c 259.379 149.531 273.277 172.395 278.773 194.777 c 282.223 208.828 278.855
 229.047 274.598 254.645 c 269.691 284.102 264.137 317.488 269.43 342.844
 c 274.203 365.727 286.09 385.535 298.668 406.504 c 311.301 427.535 324.352
 449.289 330.633 475.301 c h
330.633 475.301 m S Q
Q Q
showpage
%%Trailer
%%EOF
