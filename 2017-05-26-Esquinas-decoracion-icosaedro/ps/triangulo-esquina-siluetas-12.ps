%!PS-Adobe-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Fri Jun  9 10:15:18 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 457x308mm 1296 874 0 () ()
%%BoundingBox: 74 71 920 864
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 457x308mm
%%PageBoundingBox: 74 71 920 864
1296 875 cairo_set_page_size
%%EndPageSetup
q 74 71 846 793 rectclip q
1 0 0 rg
2.4 w
1 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 874.204712 cm
918.023 799.75 m 462.152 12.609 l 462.152 12.609 m 75.84 679.934 l 145.469
 801.648 l 918.023 799.75 l S Q
0.69282 w
q 0.57735 1 1 -0.57735 0 874.204712 cm
-449.883 368.432 m -442.145 368.433 l -442.143 371.264 l -449.886 371.262
 l h
-449.883 368.432 m S Q
q 0.57735 1 1 -0.57735 0 874.204712 cm
112.718 368.587 m 120.456 368.587 l 120.458 371.418 l 112.716 371.419 l
 h
112.718 368.587 m S Q
q 0.57735 1 1 -0.57735 0 874.204712 cm
-175.011 368.988 m -167.27 368.987 l -167.268 371.818 l -175.01 371.819
 l h
-175.011 368.988 m S Q
0.8 w
q 1 0 0 -1 0 874.204712 cm
188.996 773.785 8.941 3.27 re S Q
q 1 0 0 -1 0 874.204712 cm
838.633 773.965 8.938 3.27 re S Q
q 1 0 0 -1 0 874.204712 cm
506.395 774.426 8.938 3.27 re S Q
2.64785 w
0 J
q 0.91608 0 0 -1 0 874.204712 cm
513.554 423.453 m 509.734 415.004 507.115 411.289 506.932 402.098 c 506.663
 388.555 511.866 376.953 522.232 367.449 c 531.557 358.898 543.006 353.32
 555.611 350.117 c 561.355 348.656 567.623 347.812 573.533 348.199 c 593.169
 349.477 607.219 359.562 618.195 373.766 c 621.513 378.055 624.395 382.629
 627.474 387.074 c 629.657 391.883 631.84 396.695 634.023 401.504 c 634.079
 402.027 634.036 402.582 634.207 403.074 c 639.571 418.461 642.146 434.27
 642.833 450.383 c 643.626 469 642.279 487.504 638.07 505.699 c 635.132 
518.383 634.723 521.02 631.128 533.578 c 620.877 512.934 l 625.406 497.406
 624.007 488.91 624.983 472.828 c 626.237 452.184 624.762 431.832 618.118
 411.949 c 613.155 397.09 606.2 383.301 593.045 372.848 c 584.739 366.246
 575.175 363.262 564.263 365.098 c 553.091 366.98 543.48 371.922 535.276
 379.035 c 530.269 383.375 526.978 388.727 525.673 395.031 c 523.451 405.789
 522.709 407.441 527.357 417.043 c h
534.372 425.805 m 538.427 424.473 542.341 422.781 546.405 421.473 c 553.014
 419.344 561.461 421.523 565.218 426.934 c 568.672 431.895 571.375 437.316
 574.113 442.66 c 585.148 464.188 596.056 485.77 607.04 507.32 c 609.641
 512.426 622.843 538.035 626.561 545.172 c 630.186 552.668 633.205 558.609
 636.241 564.543 c 642.94 577.625 649.881 590.605 656.316 603.793 c 660.614
 612.59 656.269 621.863 646.585 625.562 c 604.793 641.527 562.984 657.461
 521.157 673.355 c 511.064 677.191 500.694 672.66 497.035 663.23 c 492.963
 652.746 488.686 642.324 484.396 631.91 c 483.957 630.836 482.998 629.746
 481.957 629.109 c 473.915 624.172 465.796 619.336 457.69 614.484 c 442.289
 605.277 426.878 596.09 411.476 586.883 c 396.403 577.875 381.342 568.852
 366.264 559.848 c 358.333 555.109 350.38 550.402 342.325 545.617 c 341.78
 546.27 341.345 546.738 340.969 547.246 c 337.516 551.918 334.168 556.66
 330.608 561.266 c 325.819 567.453 318.127 568.492 311.662 563.945 c 310.277
 562.973 308.955 561.918 307.603 560.906 c 306.852 559.246 306.098 557.59
 305.347 555.934 c 306.383 552.926 306.759 549.527 308.562 546.98 c 318.536
 532.934 328.813 519.07 339.08 505.207 c 342.146 501.066 346.679 498.973
 352.026 500.066 c 357.612 501.215 362.004 504.141 363.522 509.676 c 364.703
 514 362.861 517.574 360.29 520.996 c 359.331 522.273 358.422 523.582 357.471
 524.906 c 394.313 546.906 430.712 568.645 467.11 590.383 c 467.506 589.43
 467.374 588.941 467.191 588.465 c 461.349 573.797 455.511 559.125 449.665
 544.457 c 441.636 524.309 433.56 504.176 425.633 483.992 c 424.831 481.949
 424.473 479.582 424.669 477.426 c 425.317 470.293 429.675 465.719 436.865
 463.008 c 461.426 453.742 485.927 444.348 510.45 435.004 c h
534.372 425.805 m S Q
Q Q
showpage
%%Trailer
%%EOF
