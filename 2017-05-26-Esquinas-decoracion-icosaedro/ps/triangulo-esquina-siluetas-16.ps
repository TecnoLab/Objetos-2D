%!PS-Adobe-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Fri Jun  9 11:12:06 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 457x308mm 1296 874 0 () ()
%%BoundingBox: 74 71 920 864
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 457x308mm
%%PageBoundingBox: 74 71 920 864
1296 875 cairo_set_page_size
%%EndPageSetup
q 74 71 846 793 rectclip q
1 0 0 rg
2.4 w
1 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 874.204712 cm
918.023 799.75 m 462.152 12.609 l 462.152 12.609 m 75.84 679.934 l 145.469
 801.648 l 918.023 799.75 l S Q
0.69282 w
q 0.57735 1 1 -0.57735 0 874.204712 cm
112.718 368.587 m 120.456 368.587 l 120.458 371.418 l 112.716 371.419 l
 h
112.718 368.587 m S Q
q 0.57735 1 1 -0.57735 0 874.204712 cm
-175.011 368.988 m -167.27 368.987 l -167.268 371.818 l -175.01 371.819
 l h
-175.011 368.988 m S Q
0.8 w
q 1 0 0 -1 0 874.204712 cm
188.996 773.785 8.941 3.27 re S Q
q 1 0 0 -1 0 874.204712 cm
838.633 773.965 8.938 3.27 re S Q
q 1 0 0 -1 0 874.204712 cm
506.395 774.426 8.938 3.27 re S Q
1.704725 w
0 J
q 0.91608 0 0 -1 0 874.204712 cm
451.951 633.477 m 451.955 625.762 452.876 597.945 453.998 571.656 c 455.776
 530.137 455.601 523.559 452.659 521.562 c 450.8 520.301 449.269 517.734
 449.265 515.859 c 449.248 510.855 445.457 511.715 443.952 517.062 c 443.197
 519.734 444.05 523.07 445.977 525.016 c 452.898 531.98 447.768 551.934 
439.048 551.957 c 435.069 551.969 434.924 549.199 438.43 540.234 c 440.736
 534.336 440.527 532.824 436.911 529.184 c 428.695 520.91 417.578 525.016
 417.553 536.328 c 417.548 539.812 416.521 544.07 415.271 545.785 c 413.31
 548.488 412.555 548.367 409.638 544.887 c 403.869 537.996 405.464 529.711
 414.141 521.473 c 422.473 513.562 423.586 510.613 419.608 506.988 c 417.885
 505.418 417.906 500.914 419.672 491.508 c 423.283 472.258 426.051 465.289
 436.101 450.152 c 446.979 433.762 454.224 427.25 461.579 427.23 c 464.628
 427.223 467.118 426.234 467.114 425.035 c 467.101 421.246 460.253 410.609
 457.827 410.617 c 456.548 410.621 453.989 407.332 452.143 403.312 c 448.642
 395.699 449.802 391.031 456.441 385.949 c 458.91 384.062 459.43 380.43 
458.513 371.453 c 457.562 362.145 458.104 358.727 460.94 356.109 c 462.948
 354.258 465.677 348.031 467.007 342.27 c 472.022 320.539 483.194 314.008
 515.507 313.922 c 548.528 313.836 556.826 318.754 564.173 342.773 c 566.544
 350.512 569.742 357.551 571.286 358.422 c 573.175 359.484 573.742 363.465
 573.013 370.621 c 572.109 379.535 572.812 382.324 577.388 387.973 c 583.515
 395.523 582.995 402.215 575.725 409.398 c 573.333 411.766 571.375 414.969
 571.38 416.52 c 571.384 418.07 569.708 421.051 567.649 423.148 c 564.114
 426.75 564.246 426.957 570.032 426.941 c 578.373 426.918 584.692 433.262
 596.943 453.953 c 604.533 466.777 608.255 476.148 610.75 488.688 c 612.626
 498.133 613.274 506.371 612.187 506.988 c 608.379 509.16 610.294 516.117
 615.568 519.262 c 625.653 525.281 628.753 536.766 622.51 544.984 c 618.084
 550.809 614.963 547.863 614.878 537.785 c 614.818 531.066 608.972 524.496
 603.07 524.512 c 601.177 524.516 597.821 526.359 595.612 528.613 c 591.719
 532.582 591.728 535.297 595.681 546.867 c 597.753 552.941 592.286 553.207
 586.436 547.312 c 581.456 542.301 581.132 530.094 585.839 524.941 c 589.762
 520.652 588.5 514.16 583.75 514.172 c 581.554 514.18 580.769 515.355 581.622
 517.375 c 582.394 519.203 581.507 521.082 579.545 521.777 c 576.637 522.809
 576.313 527.402 577.388 552.355 c 578.083 568.5 579.264 596.465 580.01 
614.496 c 581.366 647.281 l 551.232 646.777 l 521.093 646.277 l 520.368 
614.594 l 519.682 584.629 519.4 582.91 515.166 582.922 c 510.902 582.934
 510.697 584.461 510.791 615.141 c 510.893 647.344 l 451.947 647.5 l h
451.951 633.477 m S Q
Q Q
showpage
%%Trailer
%%EOF
