%!PS-Adobe-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Wed Jun 14 13:45:06 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 457x308mm 1296 874 0 () ()
%%BoundingBox: 22 485 529 864
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 457x308mm
%%PageBoundingBox: 22 485 529 864
1296 875 cairo_set_page_size
%%EndPageSetup
q 22 485 507 379 rectclip q
1 0 0 rg
0.602848 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 874.204712 cm
313.562 11.441 m 262.41 11.441 238.66 40.062 238.66 40.062 c 228.262 34.895
 168.707 26.516 139.398 41.887 c 116.602 53.848 95.148 75.504 94.336 104.613
 c 94.336 104.613 20.25 105.281 22.402 183.914 c 23.211 213.48 92.508 244.676
 92.508 244.676 c 94.453 278.023 121.223 302.129 148.535 313.488 c 180.742
 326.887 241.199 315.656 252.668 303.137 c 252.668 303.137 275.598 329.535
 341.266 323.18 c 341.242 323.586 341.234 323.996 341.242 324.41 c 341.605
 339.762 363.668 350.512 379.684 350.508 c 379.422 351.566 379.289 352.66
 379.316 353.785 c 379.594 365.633 397.496 373.75 409.316 372.875 c 409.512
 372.859 409.711 372.836 409.91 372.812 c 409.906 372.922 409.898 373.023
 409.902 373.133 c 410.117 382.258 423.902 388.508 433.004 387.832 c 441.789
 387.18 453.465 379.301 452.957 370.504 c 452.512 362.766 441.91 357.23 
433.934 356.875 c 434.867 354.793 435.348 352.609 435.219 350.375 c 434.691
 341.172 423.105 334.371 413.199 332.934 c 416.051 328.883 417.703 324.395
 417.438 319.766 c 416.824 309.117 405.355 300.828 393.645 297.367 c 399.02
 292.25 403.371 287.035 406.129 282.434 c 406.129 282.434 429.012 290.531
 468.852 280.605 c 493.012 268.578 518.18 259.898 526.703 223.973 c 535.23
 188.043 503.562 166.117 503.562 166.117 c 509.812 158.695 522.707 130.098
 504.438 102.086 c 486.168 74.074 429.34 61.871 411 61.984 c 411 61.984 
387.539 11.441 313.562 11.441 c h
313.562 11.441 m S Q
1 g
43.637 711.193 2.035 -16.207 re f
1 0 0 rg
0.8 w
1 J
1 j
q 1 0 0 -1 0 874.204712 cm
43.637 163.012 2.035 16.207 re S Q
1 g
308.281 850.349 16.207 -2.035 re f
1 0 0 rg
q 0 -1 -1 0 0 874.204712 cm
23.855 -308.281 2.035 -16.207 re S Q
1 g
501.82 754.255 m 500.043 753.267 l 492.168 767.435 l 493.949 768.423 l 
h
501.82 754.255 m f
1 0 0 rg
0.699279 w
q -1 -0.555712 -0.555712 1 0 874.204712 cm
-332.486 -304.716 m -330.709 -304.716 l -330.707 -290.548 l -332.488 -290.549
 l h
-332.486 -304.716 m S Q
Q Q
showpage
%%Trailer
%%EOF
