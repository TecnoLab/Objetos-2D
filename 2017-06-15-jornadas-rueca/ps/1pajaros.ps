%!PS-Adobe-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Tue Jun  6 15:46:52 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 457x308mm 1296 874 0 () ()
%%BoundingBox: 7 313 433 860
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 457x308mm
%%PageBoundingBox: 7 313 433 860
1296 875 cairo_set_page_size
%%EndPageSetup
q 7 313 426 547 rectclip q
1 0 0 rg
1.674221 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 874.204712 cm
345.699 559.223 m 345.445 558.578 346.992 550.449 349.137 541.152 c 355.848
 512.055 355.953 498.793 350.094 421.902 c 348.332 398.801 347.133 376.668
 347.426 372.715 c 347.723 368.762 347.445 364.281 346.812 362.762 c 346.176
 361.242 346.086 357.195 346.605 353.77 c 347.547 347.562 347.531 347.531
 340.809 340.77 c 332.082 331.992 324.465 327.637 297.234 315.852 c 277.027
 307.105 273.109 304.664 256.754 290.613 c 246.262 281.605 237.715 275.449
 236.441 275.984 c 235.23 276.492 226.039 282.812 216.016 290.031 c 197.805
 303.145 197.719 303.234 116.371 397.297 c 71.59 449.074 33.008 492.656 
30.637 494.145 c 26.324 496.848 l 30.133 488.664 l 32.355 483.887 46.355
 465.926 63.777 445.5 c 87.742 417.402 96.172 406.168 106.621 388.375 c 
113.777 376.191 119.285 366.082 118.863 365.91 c 117.258 365.254 80.707 
396.133 68.738 408.258 c 43.18 434.148 25.484 449.375 24.281 446.512 c 22.836
 443.059 38.418 426.258 101.172 363.605 c 152.613 312.25 177.762 279.621
 193.324 244.039 c 201.152 226.137 l 197.629 217.727 l 195.688 213.102 190.285
 202.141 185.617 193.367 c 175.168 173.734 171.91 162.203 169.277 135.504
 c 166.711 109.512 166.586 108.914 161.984 101.344 c 158.719 95.965 157.383
 95.07 153.496 95.668 c 150.961 96.059 147.473 95.922 145.742 95.371 c 141.031
 93.863 110.648 93.305 101.832 94.562 c 97.594 95.164 88.465 96.082 81.551
 96.594 c 64.164 97.883 36.004 105.309 20.887 112.586 c 14.035 115.887 8.215
 118.078 7.953 117.457 c 6.48 113.945 44.805 82.074 67.18 68.199 c 94.633
 51.18 158.145 25.02 191.398 17.035 c 206.961 13.297 237.855 20.637 241.316
 28.891 c 242.012 30.547 242.434 39.531 242.258 48.859 c 241.438 92.25 241.688
 95.777 246.211 104.707 c 249.512 111.215 252.766 114.77 260.492 120.293
 c 265.992 124.227 272.746 128.469 275.492 129.715 c 283.551 133.375 296.719
 131 325.215 120.75 c 339.531 115.598 352.43 111.293 353.879 111.176 c 355.328
 111.062 358.75 110.562 361.48 110.066 c 364.422 109.535 371.477 111.355
 378.816 114.547 c 389.793 119.32 392.648 119.758 404.148 118.434 c 432.516
 115.164 433.211 115.406 414.73 122.082 c 395.906 128.879 394.93 129.566
 364.711 157.363 c 345.055 175.441 330.641 191.828 328.652 198.359 c 327.266
 202.914 335.891 226.594 341.137 232.625 c 348.543 241.145 358.516 245.559
 386.215 252.586 c 401.242 256.402 415.055 260.922 416.91 262.637 c 422.93
 268.203 433.215 314.121 432.055 330.238 c 430.879 346.527 416.312 415.66
 406.906 449.598 c 397.051 485.141 378.348 523.738 360.008 546.367 c 350.281
 558.367 346.641 561.637 345.695 559.223 c h
345.699 559.223 m S Q
Q Q
showpage
%%Trailer
%%EOF
